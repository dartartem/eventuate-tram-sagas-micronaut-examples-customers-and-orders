buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "com.avast.gradle:gradle-docker-compose-plugin:0.9.2"
    }
}


apply plugin: 'docker-compose'


subprojects {

    apply plugin: "java"

    repositories {
        mavenCentral()
        jcenter()
        maven {
            url "https://dl.bintray.com/eventuateio-oss/eventuate-maven-release"
        }
        eventuateMavenRepoUrl.split(',').each { repoUrl -> maven { url repoUrl } }
    }

}

dockerCompose {
    environment.put "EVENTUATE_COMMON_VERSION", eventuateCommonImageVersion
    environment.put "EVENTUATE_KAFKA_VERSION", eventuateMessagingKafkaImageVersion
    environment.put "EVENTUATE_CDC_VERSION", eventuateCdcImageVersion
    environment.put "EVENTUATE_SAGA_VERSION", eventuateTramSagasImageVersion

    mysqlOnly {
        projectName = null
        startedServices = [ 'mysql']
        useComposeFiles = ["docker-compose-mysql.yml"]
    }

    mysql {
        projectName = null
        useComposeFiles = ["docker-compose-mysql.yml"]
    }

    mysqlcdc {
        projectName = null
        useComposeFiles = ["docker-compose-mysql.yml"]
        startedServices = ["cdcservice"]
    }

    postgresOnly {
        projectName = null
        startedServices = [ 'postgres']
        useComposeFiles = ["docker-compose-postgres.yml"]
    }

    postgres {
        projectName = null
        useComposeFiles = ["docker-compose-postgres.yml"]
    }

    postgrescdc {
        projectName = null
        useComposeFiles = ["docker-compose-postgres.yml"]
        startedServices = ["cdcservice"]
    }
}

mysqlComposeUp.dependsOn(mysqlComposeBuild)
mysqlComposeUp.dependsOn(mysqlOnlyComposeUp)

postgresComposeUp.dependsOn(postgresComposeBuild)
postgresComposeUp.dependsOn(postgresOnlyComposeUp)
